@import '../ui-common/styles-shared.css';

/* Stile für die neue Tab-Bar und Panels */

/* Die Tab-Bar selbst */
#tab-bar {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 60px; /* Feste Höhe für die Leiste */
    background-color: #ffffff;
    border-top: 1px solid #e0e0e0;
    display: flex;
    justify-content: space-around; /* Buttons gleichmäßig verteilen */
    align-items: center;
    box-shadow: 0 -2px 5px rgba(0,0,0,0.1);
    z-index: 5000; /* Muss über allem außer Modals liegen */
}

/* Die einzelnen Buttons in der Leiste */
.tab-button {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: none;
    border: none;
    color: #888888;
    font-size: 10px;
    padding: 5px 0;
    flex-grow: 1; /* Alle Buttons nehmen gleich viel Platz ein */
    transition: color 0.2s ease;
}

.tab-button .icon {
    font-size: 24px; /* Größere Icons */
}

.tab-button .label {
    font-size: 11px;
    margin-top: 2px;
}

/* Stil für den aktiven Button */
.tab-button.active {
    color: #4da8da; /* Ihre Hauptfarbe */
}

/* Styling für die Content-Panels */
.content-panel {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: calc(100% - 60px); /* Füllt den Bildschirm über der Tab-Bar */
    background-color: rgba(245, 245, 245, 0.95); /* Leicht durchsichtiger Hintergrund */
    z-index: 4500; /* Liegt unter der Tab-Bar, aber über der Karte */
    overflow-y: auto; /* Scrollbar, falls der Inhalt zu lang ist */
    padding: 10px;
    box-sizing: border-box;
}

.content-panel.hidden {
    display: none;
}

/* Styling für das Planner-Akkordeon */
.accordion-item {
    background-color: #fff;
    margin-bottom: 10px;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    overflow: hidden; /* Wichtig für abgerundete Ecken */
}

.accordion-header {
    width: 100%;
    background-color: #f7f7f7;
    border: none;
    border-bottom: 1px solid #e0e0e0;
    padding: 15px;
    font-size: 16px;
    font-weight: bold;
    text-align: left;
    cursor: pointer;
    background-color: #4da8da;
    transition: background-color 0.3s ease;
    display: flex; /* Für das Icon */
    justify-content: space-between; /* Icon am Ende platzieren */
    align-items: center;
}

.accordion-header:hover {
    background-color: #efefef;
}

/* Icon für auf/zu Zustand hinzufügen */
.accordion-header::after {
    content: '▼'; /* Pfeil nach unten */
    font-size: 12px;
    color: #888;
    transition: transform 0.3s ease;
}

.accordion-header.active::after {
    transform: rotate(180deg); /* Pfeil drehen, wenn aktiv */
}

.accordion-content {
    /* Wichtig: Mit max-height animieren wir das auf/zu klappen */
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out, padding 0.3s ease-out;
    padding: 0 15px; /* Abstand links/rechts, aber kein Abstand oben/unten im geschlossenen Zustand */
}

.accordion-content ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.accordion-content li {
    padding: 10px 0;
    border-bottom: 1px solid #f0f0f0;
}
.accordion-content li:last-child {
    border-bottom: none;
}

/* 1. Den Body zum Haupt-Container machen */
html, body {
    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden; /* Verhindert das Scrollen der Seite */

    /* NEU: Wir machen den Body zum Flexbox-Container */
    display: flex;
    flex-direction: column; /* Ordnet die Kinder (Karte, Panels) untereinander an */
}


/* 2. Den Karten-Container anweisen, den verfügbaren Platz zu füllen */
#map-container {
    /* NEU: Dies ist die entscheidende Regel. 
       Der Container wächst und füllt den gesamten freien Platz. */
    flex-grow: 1;

    /* Verhindert, dass der Container bei sehr kleinem Bildschirm kollabiert */
    min-height: 0;
    
    /* Notwendig, damit absolut positionierte Kinder wie das Fadenkreuz korrekt ausgerichtet werden */
    position: relative; 
}


/* 3. Die Karte füllt ihren (jetzt flexiblen) Container aus */
#map {
    width: 100%;
    height: 100%;

    /* Das Padding für die obere Statusleiste bleibt wichtig */
    padding-top: env(safe-area-inset-top);
    box-sizing: border-box;
}


/* 4. Das untere Panel verhält sich normal, bekommt aber Abstand für den Home-Indikator */
#tab-bar {
    /* Verhindert, dass dieses Panel schrumpft */
    flex-shrink: 0;

    /* Abstand für den Home-Indikator des Handys direkt an das untere Panel anfügen */
    padding-bottom: env(safe-area-inset-bottom);

    /* Eine Hintergrundfarbe hilft beim Debuggen und sorgt für eine saubere Optik */
    background-color: white; /* Passen Sie die Farbe an Ihre UI an */
    z-index: 1000; /* Stellt sicher, dass das Panel über der Karte liegt */
}